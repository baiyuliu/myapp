name: CI/CD

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: self-hosted


    steps:
      - name: Checkout code
        uses: actions/checkout@v2
         
      - name: Set up environment variables and login docker
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          MYSQL_USERNAME: ${{ secrets.MYSQL_USERNAME }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
        run: |
          ls
          echo $DOCKER_PASSWORD $DOCKER_USERNAME $MYSQL_USERNAME $MYSQL_PASSWORD  > /tmp/dd.txt
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME  --password-stdin
          
          
          ### create DB init sql
          echo "CREATE DATABASE IF NOT EXISTS lookup_db;
          CREATE USER IF NOT EXISTS '${MYSQL_USERNAME}'@'%' IDENTIFIED BY '${MYSQL_PASSWORD}';

          GRANT ALL PRIVILEGES ON lookup_db.* TO '${MYSQL_USERNAME}'@'%';
          FLUSH PRIVILEGES;

          USE lookup_db;

          CREATE TABLE IF NOT EXISTS lookup_logs (
            id INT AUTO_INCREMENT PRIMARY KEY,
            domain VARCHAR(255) NOT NULL,
            result TEXT,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
          ) ENGINE=InnoDB;" >  $GITHUB_WORKSPACE/server/mysql/init.sql
          
          
          
          #### Set up MySQL password
          pwd
          echo "mysql:" >> values.yaml
          echo "  password: $MYSQL_PASSWORD" >> values.yaml
        continue-on-error:  true


      - name: Build and push web image
        run: |
          cd  $GITHUB_WORKSPACE/server
          pwd
          docker build -t server-web:latest -f web.Dockerfile .
          docker tag server-web:latest baiyuliu/server-web:latest
          docker push baiyuliu/server-web:latest
        continue-on-error:  true
 
      - name: Set up MySQL credentials


      - name: Build and push database image
        run: |
          cd  $GITHUB_WORKSPACE/server
          #docker build -t baiyuliu/mysql-service:latest --build-arg MYSQL_PASSWORD=${MYSQL_PASSWORD}  -f database.Dockerfile .
          docker build -t mysql-service:latest -f database.Dockerfile .
          docker tag mysql-service:latest baiyuliu/mysql-service:latest
          docker push baiyuliu/mysql-service:latest
        continue-on-error:  true


      - name: Deploy Helm chart
        run: |
          cd  $GITHUB_WORKSPACE/server
          helm upgrade  my-release mychart
